Branching
Merging
Conflict Resol*
Git pull Request

Git undoing
git ignore
Git rebase/reset
====================================
What is branch?
-------------------
LINE OF Code on Which are allowed to work.
--- Specific purpose

Deafult - Master
Default - Main
================
Why branching?
----------------
	BUG
	FEA
	PATCH
	HOTFIX
	Release
	TEAM
	GERO*
	Components
https://docs.microsoft.com/en-us/azure/devops/repos/tfvc/branching-strategies-with-tfvc?view=azure-devops


Types of branches in git?
- Local		- RW
- Remote	- RO
- Temporary

 502  git branch
  503  ls
  504  clear
  505  git branch -r
  506  git branch -a
  507  git checkout remotes/origin/master
  508  git branch -a
  509  ls
  510  git checkout master
  511  git branch -a
  512  clear
  513  git log --oneline
  514  git checkout 3eab4af
  515  git branch -a
  516  git checkout master

Why we have Remote branch?
===========================================
pull = fetch + merge

USER1
--------------
 492  touch fetch.txt;git add .;git commit -m"adding fetch"
  493  git push origin master
  494  clear
  495  ls
  496  git branch -a
  497  ls
  498  git checkout remotes/origin/master
  499  ls
  500  exit
  501  git push origin master
  502  git pull origin master
  503  clear
  504  touch fetch.txt;git add --all;git commit -m"adding featch"
  505  ls
  506  git branch -r
  507  git checkout origin/master
  508  ls
  509  git checkout master
  510  cleare
  511  clear
  512  git push origin master
  513  git checkout origin/master
  514  ls
  515  git checkout master

USER2
--------------
  525  git fetch origin master
  526  ls
  527  git branch -1
  528* clea
  529  git branch -a
  530  git checkout remotes/origin/master
  531  ls
  532  git checkout master
  533  clear
  534  git merge remotes/origin/master
  535  ls
  536  git branch -a
  537  git config --list
  538  clear
  539  git branch -a
  540  git fetch origin master
  541  history


How to create branch in git?
=================================
  543   git branch fea1
  544   git branch -a
  545  git checkout fea1
  546  ls
  547  git checkout -b fea11
  548*  git branch -
  549  git branch -d fea11
  550  git checkout fea1
  551  git branch -d fea11
  552   git branch -a

HEAD - Tip of Last commit of each branch
HEAD~1
HEAD~2
HEAD~3

"Git internal"


Fast Forward
========================
  567  git branch fea
  568  git checkout fea
  569  git log --oneline
  570  clear
  571  ls
  572  touch ff1.txt;git add .;git commit -m"Ading ff1"
  573  touch ff2.txt;git add .;git commit -m"Ading ff2"
  574  touch ff3.txt;git add .;git commit -m"Ading ff3"
  575  clear
  576  git checkout master
  577  git diff fea
  578  git merge fea
  579  ls
  580  git log --oneline
  581  gitk

Recursive  aka 3 way merge
=================================
 585  git checkout fea
  586  touch recurse1.txt;git add .;git commit -m"adding recurse1"
  587  touch recurse2.txt;git add .;git commit -m"adding recurse2"
  588  git checkout master
  589  touch master1.txt;git add .;git commit -m"adding master1"
  590  touch master2.txt;git add .;git commit -m"adding master2"
  591  clear
  592  git checkout fea
  593  touch recurse3.txt;git add .;git commit -m"adding recurse3"
  594  touch recurse4.txt;git add .;git commit -m"adding recurse4"
  595  git log --oneline
  596  git checkout master
  597  git log --oneline
  598  touch master3.txt;git add .;git commit -m"adding master3"
  599  clear
  600  git merge fea

Cherry-Picking
===========================
  603  git log --oneline
  604  clear
  605  git checkout fea
  606  touch cherry1.txt;git add .;git commit -m"adding cherry1"
  607  touch cherry2.txt;git add .;git commit -m"adding cherry2"
  608  touch cherry3.txt;git add .;git commit -m"adding cherry3"
  609  touch cherry4.txt;git add .;git commit -m"adding cherry4"
  610  clear
  611  git log --oneline
  612  git checkout master
  613  clear
  614  git cherry-pick 878e7c5
  615  ls
  616  git log --oneline



Ref
https://www.devopsschool.com/pdf/git/slides/git-plumbing-porcelain-introduction.pdf
